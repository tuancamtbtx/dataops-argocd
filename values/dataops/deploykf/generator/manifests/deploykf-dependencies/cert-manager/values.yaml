########################################
## SHARED | deploykf
########################################
deployKF:
  extraManifests:

  certManager:
    clusterIssuer:
      enabled: true
      issuerName: "deploykf-gateway-issuer"
      type: "SELF_SIGNED"
      selfSigned:
        caIssuerName: "selfsigned-ca-issuer"
        caSecretName: "selfsigned-ca-issuer-root-cert"
        injectedConfigMapName: "deploykf-gateway-issuer-root-ca-cert"


########################################
## DEPENDENCY | cert-manager
########################################
## as we reference the "cert-manager" chart (https://charts.jetstack.io) in `dependencies` of Chart.yaml,
## we must indent our values under `cert-manager:` in this file
cert-manager:
  fullnameOverride: cert-manager

  installCRDs: true

  replicaCount: 1

  image:
    repository: "quay.io/jetstack/cert-manager-controller"
    pullPolicy: "IfNotPresent"

  podLabels: {}

  securityContext: {"fsGroup":1001}

  serviceAccount:
    create: true
    name: "cert-manager"
    annotations: {}

  extraArgs: ["--enable-certificate-owner-ref=true"]

  prometheus:
    enabled: false

  webhook:
    replicaCount: 1
    image:
      repository: "quay.io/jetstack/cert-manager-webhook"
      pullPolicy: "IfNotPresent"

  cainjector:
    enabled: true
    replicaCount: 1
    image:
      repository: "quay.io/jetstack/cert-manager-cainjector"
      pullPolicy: "IfNotPresent"

  acmesolver:
    image:
      repository: "quay.io/jetstack/cert-manager-acmesolver"

  startupapicheck:
    enabled: true
    image:
      repository: "quay.io/jetstack/cert-manager-ctl"
      pullPolicy: "IfNotPresent"

    jobAnnotations:
      ## this job will block the main sync wave until the webhook is ready to create certificates,
      ## by default this hook would run PostSync (helm: post-install), which is too late
      argocd.argoproj.io/hook: Sync
      argocd.argoproj.io/sync-wave: "1"
      argocd.argoproj.io/hook-delete-policy: HookSucceeded,BeforeHookCreation

    rbac:
      annotations:
        ## we ensure the RBAC resources have earlier sync-wave than the job
        argocd.argoproj.io/hook: Sync
        argocd.argoproj.io/sync-wave: "0"
        argocd.argoproj.io/hook-delete-policy: HookSucceeded,BeforeHookCreation

    serviceAccount:
      annotations:
        ## we ensure the ServiceAccount resources have earlier sync-wave than the job
        argocd.argoproj.io/hook: Sync
        argocd.argoproj.io/sync-wave: "0"
        argocd.argoproj.io/hook-delete-policy: HookSucceeded,BeforeHookCreation


########################################
## DEPENDENCY | trust-manager
########################################
## as we reference the "trust-manager" chart (https://charts.jetstack.io) in `dependencies` of Chart.yaml,
## we must indent our values under `trust-manager:` in this file
trust-manager:
  replicaCount: 1

  image:
    repository: "quay.io/jetstack/trust-manager"
    pullPolicy: "IfNotPresent"

  defaultPackageImage:
    repository: "quay.io/jetstack/cert-manager-package-debian"
    pullPolicy: "IfNotPresent"

  app:
    certificateAnnotations:
      ## we must sync cert-manager resources after cert-manager itself
      argocd.argoproj.io/sync-wave: "10"

    deploymentAnnotations:
      ## we must sync the trust-manager deployment after its certificate is ready
      argocd.argoproj.io/sync-wave: "20"

    trust:
      namespace: "cert-manager"